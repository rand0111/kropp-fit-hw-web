/**
  Нормалізація блочної моделі
 */
 *,
 ::before,
 ::after {
   box-sizing: border-box;
 }

 /**
   Прибираємо внутрішні відступи зліва у тегів списків,
   які мають атрибут class
  */
 :where(ul, ol):where([class]) {
   padding-left: 0;
 }

 /**
   Прибираємо зовнішні відступи у body та двох інших тегів,
   які мають атрибут class
  */
 body,
 :where(blockquote, figure):where([class]) {
   margin: 0;
 }

 /**
   Прибираємо вертикальні зовнішні відступи у потрібних тегів,
   які мають атрибут class
  */
 :where(
   h1,
   h2,
   h3,
   h4,
   h5,
   h6,
   p,
   ul,
   ol,
   dl
 ):where([class]) {
   margin-block: 0;
 }

 :where(dd[class]) {
   margin-left: 0;
 }

 :where(fieldset[class]) {
   margin-left: 0;
   padding: 0;
   border: none;
 }

 /**
   Прибираємо стандартні маркери у маркованого списку,
   який має атрибут class
  */
 :where(ul[class]) {
   list-style: none;
 }

 :where(address[class]) {
   font-style: normal;
 }

 /**
   Скидаємо вертикальні зовнішні відступи у параграфа,
   оголошуємо локальну змінну для нижнього відступу,
   щоб уникнути конфлікту зі складнішими селекторами
  */
 p {
   --paragraphMarginBottom: 24px;

   margin-block: 0;
 }

 /**
   Нижній відступ для параграфа без атрибута class,
   якщо він не останній серед сусідніх елементів
  */
 p:where(:not([class]):not(:last-child)) {
   margin-bottom: var(--paragraphMarginBottom);
 }

 /**
   Спрощуємо роботу з зображеннями та відео
  */
 img,
 video {
   display: block;
   max-width: 100%;
   height: auto;
 }

 /**
   Успадковуємо шрифт для полів вводу
  */
 input,
 textarea,
 select,
 button {
   font: inherit;
 }

 html {
   /**
     Корисно в більшості ситуацій
     (наприклад, коли потрібно "притиснути" футер донизу)
    */
   height: 100%;
   /**
     Усуваємо стрибок інтерфейсу по горизонталі
     при появі / зникненні смуги прокрутки
    */
   scrollbar-gutter: stable;
 }

 /**
   Плавне прокручування
  */
 html,
 :has(:target) {
   scroll-behavior: smooth;
 }

 body {
   /**
     Корисно в більшості ситуацій
     (наприклад, коли потрібно "притиснути" футер донизу)
    */
   min-height: 100%;
   /**
     Уніфікований міжрядковий інтервал
    */
   line-height: 1.5;
 }

 /**
   Нормалізація висоти посилань при перегляді в DevTools
  */
 a:where([class]) {
   display: inline-flex;
 }

 /**
   Курсор у вигляді руки при наведенні
  */
 button,
 label {
   cursor: pointer;
 }

 /**
   Уніфікуємо колір svg-елементів
   (окрім тих, у яких вже вказано
   атрибут fill зі значенням 'none' або який починається з 'url')
  */
 :where([fill]:not(
   [fill="none"],
   [fill^="url"]
 )) {
   fill: currentColor;
 }

 a {
  color: currentColor;
  text-decoration: none;
 }

 /**
   Уніфікуємо колір svg-елементів
   (окрім тих, у яких вже вказано
   атрибут stroke зі значенням 'none')
  */
 :where([stroke]:not(
   [stroke="none"],
   [stroke^="url"]
 )) {
   stroke: currentColor;
 }

 /**
   Виправляємо затримку зміни кольору при взаємодії з svg-елементами
  */
 svg * {
   transition-property: fill, stroke;
 }

 /**
   Приводимо рамки таблиць до класичного вигляду 'collapse'
  */
 :where(table) {
   border-collapse: collapse;
   border-color: currentColor;
 }

 /**
   Вимикаємо всі анімації та переходи для користувачів,
   які надають перевагу їх відсутності
  */
 @media (prefers-reduced-motion: reduce) {
   *,
   ::before,
   ::after {
     animation-duration: 0.01ms !important;
     animation-iteration-count: 1 !important;
     transition-duration: 0.01ms !important;
     scroll-behavior: auto !important;
   }
 }
